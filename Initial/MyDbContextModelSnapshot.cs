// <auto-generated />
using System;
using IS220_WebApplication.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IS220_WebApplication.Initial
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IS220_WebApplication.Models.Category", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("category");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Developer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("developer");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Game", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<uint>("Developer")
                        .HasColumnType("int unsigned")
                        .HasColumnName("developer");

                    b.Property<string>("DownloadLink")
                        .IsRequired()
                        .HasColumnType("tinytext")
                        .HasColumnName("downloadLink");

                    b.Property<string>("ImgPath")
                        .HasColumnType("tinytext")
                        .HasColumnName("imgPath");

                    b.Property<decimal>("Price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("price");

                    b.Property<uint>("Publisher")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("publisher");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("releaseDate");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'active'");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Developer" }, "FK_Game_Developer");

                    b.HasIndex(new[] { "Publisher" }, "FK_Game_Publisher");

                    b.ToTable("game");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.GameCategory", b =>
                {
                    b.Property<uint>("Category")
                        .HasColumnType("int unsigned")
                        .HasColumnName("category");

                    b.Property<uint>("Game")
                        .HasColumnType("int unsigned")
                        .HasColumnName("game");

                    b.HasIndex(new[] { "Category" }, "FK_GC_Category");

                    b.HasIndex(new[] { "Game" }, "FK_GC_Game");

                    b.ToTable("game_category");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.GameOwned", b =>
                {
                    b.Property<uint>("GameId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("gameID");

                    b.Property<uint>("UserId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("userID");

                    b.HasIndex(new[] { "GameId" }, "FK_GameOwner_Game");

                    b.HasIndex(new[] { "UserId" }, "FK_GameOwner_User");

                    b.ToTable("game_owned");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Publisher", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName(" id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("publisher");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Transaction", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<uint>("TransInfoId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("transInfoID");

                    b.Property<uint>("UserId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("userID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TransInfoId" }, "FK_Info_Trans");

                    b.HasIndex(new[] { "UserId" }, "FK_User_Trans");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.TransactionInfomation", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<uint?>("GameId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("gameID");

                    b.Property<uint>("TypeId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("typeID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "GameId" }, "FK_Game_Trans");

                    b.HasIndex(new[] { "TypeId" }, "Fk_Type_Trans");

                    b.ToTable("transaction_infomation");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.TransactionType", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("transaction_type");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Birth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("birth")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("Cash")
                        .HasColumnType("int(11)")
                        .HasColumnName("cash");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("Modified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("modified")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<sbyte>("Role")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "username")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Game", b =>
                {
                    b.HasOne("IS220_WebApplication.Models.Developer", "DeveloperNavigation")
                        .WithMany("Games")
                        .HasForeignKey("Developer")
                        .IsRequired()
                        .HasConstraintName("FK_Game_Developer");

                    b.HasOne("IS220_WebApplication.Models.Publisher", "PublisherNavigation")
                        .WithMany("Games")
                        .HasForeignKey("Publisher")
                        .IsRequired()
                        .HasConstraintName("FK_Game_Publisher");

                    b.Navigation("DeveloperNavigation");

                    b.Navigation("PublisherNavigation");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.GameCategory", b =>
                {
                    b.HasOne("IS220_WebApplication.Models.Category", "CategoryNavigation")
                        .WithMany()
                        .HasForeignKey("Category")
                        .IsRequired()
                        .HasConstraintName("FK_GC_Category");

                    b.HasOne("IS220_WebApplication.Models.Game", "GameNavigation")
                        .WithMany()
                        .HasForeignKey("Game")
                        .IsRequired()
                        .HasConstraintName("FK_GC_Game");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("GameNavigation");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.GameOwned", b =>
                {
                    b.HasOne("IS220_WebApplication.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GameOwner_Game");

                    b.HasOne("IS220_WebApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_GameOwner_User");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Transaction", b =>
                {
                    b.HasOne("IS220_WebApplication.Models.TransactionInfomation", "TransInfo")
                        .WithMany("Transactions")
                        .HasForeignKey("TransInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_Info_Trans");

                    b.HasOne("IS220_WebApplication.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Trans");

                    b.Navigation("TransInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.TransactionInfomation", b =>
                {
                    b.HasOne("IS220_WebApplication.Models.Game", "Game")
                        .WithMany("TransactionInfomations")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Game_Trans");

                    b.HasOne("IS220_WebApplication.Models.TransactionType", "Type")
                        .WithMany("TransactionInfomations")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("Fk_Type_Trans");

                    b.Navigation("Game");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Developer", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Game", b =>
                {
                    b.Navigation("TransactionInfomations");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.Publisher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.TransactionInfomation", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.TransactionType", b =>
                {
                    b.Navigation("TransactionInfomations");
                });

            modelBuilder.Entity("IS220_WebApplication.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
